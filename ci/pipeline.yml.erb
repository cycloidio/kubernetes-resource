<%
  kubernetes_versions = %w(stable-1.17 stable-1.18 stable-1.19 stable-1.20 stable-1.21 latest)
  def tag(version); version.sub(/^stable-/, ''); end
  def image_resource_name(version); "kubernetes-resource-image-" + tag(version); end

  base_image = {repository: 'ubuntu', tag: '18.04'}
  def base_image.to_s; "#{self[:repository]}-#{self[:tag]}"; end
%>
# ci/pipeline.yml
#
# DO NOT MAKE CHANGES TO THIS FILE. Instead, modify ci/pipeline.yml.erb and
# execute build-pipeline-yml.
#
# created: <%= DateTime.now.to_s %>
#
resource_types:
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

resources:
- name: <%= base_image %>
  type: docker-image
  source:
    repository: <%= base_image[:repository] %>
    tag: "<%= base_image[:tag] %>"

- name: kubernetes-resource
  type: git
  source:
    uri: git://github.com/cycloidio/kubernetes-resource.git
    branch: master

- name: kubernetes-resource-release
  type: git
  source:
    uri: git://github.com/cycloidio/kubernetes-resource.git
    branch: master
    tag_filter: v*

<% kubernetes_versions.each do |version| %>
- name: <%= image_resource_name(version) %>
  type: docker-image
  source:
    repository: cycloid/kubernetes-resource
    tag: "<%= tag(version) %>"
    username: ((docker-username))
    password: ((docker-password))
<% end %>

- name: kubernetes-resource-image-edge
  type: docker-image
  source:
    repository: cycloid/kubernetes-resource
    tag: edge
    username: ((docker-username))
    password: ((docker-password))

<% kubernetes_versions.each do |version| %>
- name: <%= version %>
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/<%= version %>.txt
    filename: version
<% end %>

jobs:
- name: build-<%= image_resource_name("edge") %>
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource
        trigger: true
      - get: <%= base_image %>
        params: {save: true}
        trigger: true
      - get: latest
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource/ci/tasks/build-build-args-file.yml
      input_mapping: {version: latest}
    - put: <%= image_resource_name("edge") %>
      params:
        build: kubernetes-resource
        load_base: <%= base_image %>
        build_args_file: output/build-args-file

<% kubernetes_versions.each do |version| %>
- name: build-<%= image_resource_name(version) %>
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: kubernetes-resource-release
        trigger: true
      - get: <%= base_image %>
        params: {save: true}
        trigger: true
      - get: <%= version %>
        trigger: true
    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping: {version: <%= version %>}
    - put: <%= image_resource_name(version) %>
      params:
        build: kubernetes-resource-release
        load_base: <%= base_image %>
        build_args_file: output/build-args-file
<% end %>
