<%
  kubernetes_versions = %w(stable-1.20 stable-1.21 stable-1.22 stable-1.23 stable-1.24 stable-1.25 stable-1.26 stable-1.27 stable-1.28 latest)
  def tag(version); version.sub(/^stable-/, ''); end
  def image_resource_name(version); "kubernetes-resource-image-" + tag(version); end

  base_image = {repository: 'ubuntu', tag: '20.04'}
  def base_image.to_s; "#{self[:repository]}-#{self[:tag]}"; end
%>
# ci/pipeline.yml
#
# DO NOT MAKE CHANGES TO THIS FILE. Instead, modify ci/pipeline.yml.erb and
# execute build-pipeline-yml.
#
# created: <%= DateTime.now.to_s %>
#
resource_types:
- name: file-url
  type: registry-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

resources:
- name: <%= base_image %>
  type: registry-image
  source:
    repository: <%= base_image[:repository] %>
    tag: "<%= base_image[:tag] %>"

- name: kubernetes-resource
  type: git
  source:
    uri: https://github.com/cycloidio/kubernetes-resource.git
    branch: master

- name: kubernetes-resource-release
  type: git
  source:
    uri: https://github.com/cycloidio/kubernetes-resource.git
    branch: master
    tag_filter: v*

<% kubernetes_versions.each do |version| %>
- name: <%= image_resource_name(version) %>
  type: registry-image
  source:
    repository: cycloid/kubernetes-resource
    tag: "<%= tag(version) %>"
    username: ((docker-username))
    password: ((docker-password))
<% end %>

- name: kubernetes-resource-image-edge
  type: registry-image
  source:
    repository: cycloid/kubernetes-resource
    tag: edge
    username: ((docker-username))
    password: ((docker-password))

<% kubernetes_versions.each do |version| %>
- name: <%= version %>
  type: file-url
  source:
    url: https://storage.googleapis.com/kubernetes-release/release/<%= version %>.txt
    filename: version
<% end %>

jobs:
- name: build-<%= image_resource_name("edge") %>
  public: true
  serial: true
  plan:
  - do:
    - in_parallel:
      - get: kubernetes-resource
        trigger: true
      - get: <%= base_image %>
        params:
          format: oci
        trigger: true
      - get: latest
        trigger: true

    - task: build-build-args-file
      file: kubernetes-resource/ci/tasks/build-build-args-file.yml
      input_mapping:
        version: latest

    - task: build
      privileged: true
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: concourse/oci-build-task
            tag: latest
        inputs:
          - name: kubernetes-resource
            path: source
          - name: output
          - name: <%= base_image %>
        run:
          path: build
        outputs:
          - name: image
        params:
          CONTEXT: source
          BUILD_ARGS_FILE: output/build-args-file
          IMAGE_ARG_base_image: <%= base_image %>/image.tar

    - put: <%= image_resource_name("edge") %>
      params:
        image: image/image.tar

<% kubernetes_versions.each do |version| %>
- name: build-<%= image_resource_name(version) %>
  public: true
  serial: true
  plan:
  - do:
    - in_parallel:
      - get: kubernetes-resource-release
        trigger: true
      - get: <%= base_image %>
        params:
          format: oci
        trigger: true
      - get: <%= version %>
        trigger: true

    - task: build-build-args-file
      file: kubernetes-resource-release/ci/tasks/build-build-args-file.yml
      input_mapping:
        version: <%= version %>

    - task: build
      privileged: true
      config:
        platform: linux
        image_resource:
          type: registry-image
          source:
            repository: concourse/oci-build-task
            tag: latest
        inputs:
          - name: kubernetes-resource-release
            path: source
          - name: output
          - name: <%= base_image %>
        run:
          path: build
        outputs:
          - name: image
        params:
          CONTEXT: source
          BUILD_ARGS_FILE: output/build-args-file
          IMAGE_ARG_base_image: <%= base_image %>/image.tar

    - put: <%= image_resource_name(version) %>
      params:
        image: image/image.tar
<% end %>
